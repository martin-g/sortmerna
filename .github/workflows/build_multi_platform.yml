name: build multi-platform

on:
  pull_request: 
    branches: 
      - master
  push: 
    branches: 
      - mastter
  workflow_dispatch:

concurrency: 
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}


permissions:
  contents: read
    

jobs:
  job_1:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        #exclude:
        #  - os: ubuntu-latest
        #  - os: macos-latest
    steps:
    - name: git checkout
      uses: actions/checkout@v4
    - name: build non-windows
      if: runner.os != 'Windows'
      run: |
        eval "$(conda shell.bash activate)"
        conda install -c conda-forge -y pyyaml jinja2 requests ninja
        python setup.py -n all
        echo "=== listing dist/ ==="
        ls -l ./dist
    - name: build windows
      if: runner.os == 'Windows'
      env:
        CC: cl
      run: |
        & "$env:CONDA/shell/condabin/conda-hook.ps1"
        & "$env:programfiles/Microsoft Visual Studio/2022/Enterprise/Common7/Tools/Launch-VsDevShell.ps1" -arch amd64
        conda activate $env:CONDA
        conda install -c conda-forge -y pyyaml jinja2 requests ninja
        echo "cmake version: $(cmake --version)"
        pushd $env:GITHUB_WORKSPACE
        echo 'running python setup.py ... in $(pwd)'
        python setup.py -n all
        echo "=== listing dist/ ==="
        ls -l ./dist
    - name: upload macOS artifacts
      uses: actions/upload-artifact@v4
      if: runner.os == 'macOS'
      with:
        retention-days: 3
        path: |
          dist/sortmerna*Darwin.7z
          dist/sortmerna*Darwin.sh
          dist/sortmerna*Darwin.tar.gz
    #- name: upload linux artifacts
    #  uses: actions/upload-artifact@v4
    #  if: runner.os == 'Linux'
    #  with:
    #    retention-days: 3
    #    path: |
    #      dist/sortmerna*Linux.deb
    #      dist/sortmerna*Linux.sh
    #      dist/sortmerna*Linux.tar.gz
    #- name: upload windows artifacts
    #  uses: actions/upload-artifact@v4
    #  if: runner.os == 'Windows'
    #  with:
    #    retention-days: 3
    #    path: |
    #      dist/sortmerna*win64.7z

  build-linux-aarch64:
    name: Build on Linux ARM64
    runs-on: ubuntu-latest
    
    steps:
    - name: git checkout
      uses: actions/checkout@v4
    - name: Build
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        dockerRunArgs: |
          --volume "${PWD}:/sortmerna"
        install: |
          apt-get update -q -y
          apt-get install -q -y gcc g++ wget file python3 git
          wget https://github.com/conda-forge/miniforge/releases/download/23.11.0-0/Mambaforge-23.11.0-0-Linux-aarch64.sh
          bash Mambaforge-23.11.0-0-Linux-aarch64.sh -b
        run: |
          set -x
          export PATH=${HOME}/mambaforge/bin:$PATH
          eval "$(conda shell.bash activate)"
          conda install -c conda-forge -y cmake pyyaml jinja2 requests ninja
          cd /sortmerna
          python3 setup.py -n all
          echo "=== listing files ==="
          ls -laR
    